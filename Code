local _a=game:GetService(string.char(72,116,116,112,83,101,114,118,105,99,101))
local _b=game:GetService(string.char(80,108,97,121,101,114,115))
local _c=game:GetService(string.char(82,101,112,108,105,99,97,116,101,100,83,116,111,114,97,103,101))
local _d=game:GetService(string.char(82,117,110,83,101,114,118,105,99,101))
local _e=game:GetService(string.char(86,105,114,116,117,97,108,73,110,112,117,116,77,97,110,97,103,101,114))
local _f=_b.LocalPlayer
local _g=workspace.CurrentCamera

spawn(function()
while true do
local _h={[1]="1v1"}
_c.Remotes.Matchmaking.JoinQueue:InvokeServer(unpack(_h))
local _i={[1]="Arena"}
_c.Remotes.Duels.VoteMap:FireServer(unpack(_i))
local _j={[1]={"Assault Rifle","Handgun","Fists","Grenade"}}
_c.Remotes.Replication.Fighter.PickWeapons:FireServer(unpack(_j))
wait(1.1)
end
end)

local function _k()
local _l=_g.ViewportSize.X/2
local _m=_g.ViewportSize.Y/2
_e:SendMouseButtonEvent(_l,_m,0,true,game,1)
_e:SendMouseButtonEvent(_l,_m,0,false,game,1)
end

local function _n()
local function _o()
local _p=nil
local _q=math.huge
for _,_r in ipairs(_b:GetPlayers()) do
if _r~=_f and _r.Character and _r.Character:FindFirstChild("HumanoidRootPart") then
local _s=(_f.Character.HumanoidRootPart.Position-_r.Character.HumanoidRootPart.Position).magnitude
if _s<_q then
_q=_s
_p=_r
end
end
end
return _p
end

local function _t(_u)
while _u and _u.Character and _u.Character:FindFirstChild("Humanoid") and _u.Character.Humanoid.Health>0 do
_g.CFrame=CFrame.new(_g.CFrame.Position,_u.Character.HumanoidRootPart.Position)
_d.RenderStepped:Wait()
end
end

local function _v(_w)
local _x=6
local _y=8
local _z=0.1
while _w and _w.Character and _w.Character:FindFirstChild("Humanoid") and _w.Character.Humanoid.Health>0 do
for _aa=0,math.pi*2,_z do
local _ab=math.cos(_aa)*_x
local _ac=math.sin(_aa)*_x
local _ad=_w.Character.HumanoidRootPart.Position.Y+_y
_f.Character.HumanoidRootPart.CFrame=CFrame.new(_w.Character.HumanoidRootPart.Position+Vector3.new(_ab,_ad-_w.Character.HumanoidRootPart.Position.Y,_ac),_w.Character.HumanoidRootPart.Position)
_d.RenderStepped:Wait()
end
end
end

local function _ae()
local _af=true
spawn(function()
while _af do
local _ag=_f
for _,_ah in pairs(_b:GetPlayers()) do
if _ah~=_ag and _ah.Character and _ah.Character:FindFirstChild("Humanoid") and _ah.Character:FindFirstChild("HumanoidRootPart") then
local _ai=_ah.Character.Humanoid
if _ai.Health>0 then
_k()
end
end
end
wait(0.08)
end
end)
return function() _af=false end
end

for _aj=1,5 do
local _ak=_o()
if _ak then
spawn(function() _t(_ak) end)
spawn(function() _v(_ak) end)
wait(3)
local _al=_ae()
local _am=_ak.Character.Humanoid
_am.Died:Connect(function()
_al()
wait(5)
_n()
end)
end
end
end

local function _an()
while true do
if #_b:GetPlayers()==2 then
_n()
end
wait(1)
end
end

local _ao=require(_f.PlayerScripts.Modules.ClientReplicatedClasses.ClientFighter.ClientItem)
local _ap=_ao.Input
local _aq

local function _ar()
_aq=hookfunction(_ap,function(...)
local _as={...}
if type(_as[1])=="table" then
_as[1].Info.ShootRecoil=0
_as[1].Info.ShootSpread=0
_as[1].Info.ProjectileSpeed=99999999
_as[1].Info.ShootCooldown=0
_as[1].Info.QuickShotCooldown=0
end
return _aq(...)
end)
end

_ar()
_an()

spawn(function()
    while true do
        local args = {
            [1] = "1v1"
        }
        ReplicatedStorage.Remotes.Matchmaking.JoinQueue:InvokeServer(unpack(args))
        local args = {
            [1] = "Arena"
        }
        game:GetService("ReplicatedStorage").Remotes.Duels.VoteMap:FireServer(unpack(args))
        local args = {
    [1] = {
        [1] = "Assault Rifle",
        [2] = "Handgun",
        [3] = "Fists",
        [4] = "Grenade"
    }
}

game:GetService("ReplicatedStorage").Remotes.Replication.Fighter.PickWeapons:FireServer(unpack(args))
        wait(1.1)
    end
end)
